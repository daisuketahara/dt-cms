# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    app.locales: en|nl
    files_directory: '%kernel.project_dir%/files'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']


    # inject dependencies into services
    App\Service\FileService:
        arguments:
            $em: '@doctrine.orm.entity_manager'

    App\Service\MenuService:
        arguments:
            $em: '@doctrine.orm.entity_manager'

    App\Service\SettingService:
        arguments:
            $em: '@doctrine.orm.entity_manager'

    App\Service\RedirectService:
        arguments:
            $em: '@doctrine.orm.entity_manager'

    App\Service\LogService:
        arguments:
            $em: '@doctrine.orm.entity_manager'
            #$request: '@request'

    App\Service\MailService:
        arguments:
            $em: '@doctrine.orm.entity_manager'
